\c project
SELECT * FROM covidvaccinations;

CREATE TABLE coviddeaths (
iso_code VARCHAR(20),
continent VARCHAR(25),
location VARCHAR(50),
date DATE,
	population BIGINT,
	total_cases BIGINT,
	new_cases BIGINT,
	new_cases_smoothed BIGINT,
	total_deaths BIGINT,
	new_deaths BIGINT,
	new_deaths_smoothed DECIMAL(12,4),
	total_cases_per_million DECIMAL(12,4),
	new_cases_per_million DECIMAL(12,4),
	new_cases_smoothed_per_million DECIMAL(12,4),
	total_deaths_per_million DECIMAL(12,4),
	new_deaths_per_million DECIMAL(12,4),
new_deaths_smoothed_per_million DECIMAL(12,4),
reproduction_rate DECIMAL(12,4),
icu_patients INT,
	icu_patients_per_million DECIMAL(12,4),

hosp_patients INT,
hosp_patients_per_million DECIMAL(12,4),
weekly_icu_admissions INT,
weekly_icu_admissions_per_million DECIMAL(12,4),
weekly_hosp_admissions INT,
weekly_hosp_admissions_per_millio DECIMAL(12,4)
);
 
SELECT * FROM coviddeaths;
-- OVERALL DEATH%
SELECT location, population, MAX(total_cases), MAX(total_cases::NUMERIC/population)*100 AS HighestInfectionRate FROM coviddeaths
WHERE continent IS NOT NULL
GROUP BY 1, 2
ORDER BY HighestInfectionRate DESC;

-- Highest Death Rate
SELECT location, population, MAX(total_deaths), MAX(total_deaths::NUMERIC/population)*100 AS HighestDeathRate FROM coviddeaths
WHERE continent IS NOT NULL
GROUP BY 1, 2
ORDER BY HighestDeathRate DESC;

-- Highest death count
SELECT location, MAX(total_deaths) AS DeathCount FROM coviddeaths
WHERE continent IS NOT NULL
GROUP BY 1
ORDER BY DeathCount DESC;

--Highest Death count continent wise
SELECT continent, MAX(total_deaths) FROM coviddeaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY MAX(total_deaths) DESC;

--Death rate against cases
SELECT date, SUM(new_cases), SUM(new_deaths), SUM(new_deaths::NUMERIC)/SUM(new_cases)*100 AS DeathPercentage FROM coviddeaths
WHERE continent IS NOT NULL
GROUP BY 1
ORDER BY DeathPercentage DESC;

--Worldwide cases, deaths and deathrate
SELECT total_cases, total_deaths, (total_deaths::NUMERIC/total_cases)*100 AS DeathRate FROM coviddeaths
WHERE continent IS NOT NULL;

SELECT * FROM coviddeaths dea
JOIN covidvaccinations vac
ON dea.location = vac.location AND dea.date = vac.date;

--Population Vs Vaccination (Vaccination rate) with rolling sum using CTE
WITH PopVsVac (continent, location, date, population, new_vaccinations, rollingsum) AS (
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations)
OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rollingsum
	FROM coviddeaths dea
	JOIN covidvaccinations vac
	ON dea.location = vac.location AND
	dea.date = vac.date
	WHERE dea.continent IS NOT NULL)
SELECT *, (rollingsum::NUMERIC/population)*100 AS VacRate FROM PopVsVac;

--Population Vs Vaccination (Vaccination rate) with rolling sum using Temperory table
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations)
OVER(PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rollingsum
	FROM coviddeaths dea
	JOIN covidvaccinations vac
	ON dea.location = vac.location AND
	dea.date = vac.date
	WHERE dea.continent IS NOT NULL;
	
--Create the temp table
CREATE TABLE temp_table (
continent VARCHAR(40),
location VARCHAR(50),
date DATE,
population BIGINT,
new_vaccinations BIGINT,
rollingsum INT
)
SELECT * FROM temp_table;

--CONVERT ROLLING SUM TO BIGINT
ALTER TABLE temp_table
ALTER COLUMN rollingsum TYPE BIGINT;

--NOW getting the vaccination rate
SELECT *, (rollingsum::NUMERIC/population)*100 AS VacRate FROM temp_table;

--For second table, overall deaths
SELECT location, SUM(new_deaths) AS TotalDeathCount FROM coviddeaths
WHERE continent IS NULL AND
location NOT IN ('World', 'European Union', 'International', 'Upper middle income', 'High income', 'Lower middle income', 'Low income')
GROUP BY location
ORDER BY TotalDeathCount DESC;

--Table 4
SELECT location, population, date, MAX(total_cases), MAX(total_cases::NUMERIC/population)*100 AS InfectionRate FROM coviddeaths
GROUP BY location, population, date
ORDER BY InfectionRate DESC;

SELECT * FROM coviddeaths;
